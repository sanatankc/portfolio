@import "tailwindcss";
@import "../node_modules/@hackernoon/pixel-icon-library/fonts/iconfont.css";
@config "../tailwind.config.ts";

/* @import url('./fonts/chicago.css');
@import url('./fonts/geneva-12.css'); */

/* Add Hackernoon Icons */
/* @import url('https://cdn.hackernoon.com/hackernoon-icons/hn-icons.css'); */

/* Media Gallery Breakout Styles */
.media-breakout-wide {
  width: calc(100vw - 4rem);
  margin-left: calc(-50vw + 50% + 2rem);
  margin-right: calc(-50vw + 50% + 2rem);
  margin-top: 2rem;
  margin-bottom: 2rem;
  max-width: none;
  position: relative;
}

.media-breakout-full {
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
  margin-top: 2rem;
  margin-bottom: 2rem;
  max-width: none;
  position: relative;
}

@media (min-width: 768px) {
  .media-breakout-wide {
    width: calc(100vw - 8rem);
    margin-left: calc(-50vw + 50% + 4rem);
    margin-right: calc(-50vw + 50% + 4rem);
  }
}

@font-face {
  font-family: 'Chicago Plain';
  src: url('./fonts/Chicago.woff') format('woff');
}

@font-face {
  font-family: 'Geneva-12';
  src: url('./fonts/geneva-12.otf') format('opentype');
}


body {
  margin: 0;
  padding: 0;
  font-family: 'Geneva-12', 'Chicago Plain', monospace;
  overflow-x: hidden;
}

/* Noise background for blog pages */
.blog-noise-bg {
  background-image: url('/assets/noise.png');
  background-repeat: repeat;
  background-size: 200px 200px;
  opacity: 0.3;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  /* z-index: -1; */
}

@media (prefers-color-scheme: dark) {
  .blog-noise-bg {
    filter: invert(1);
  }
}

/* Media gallery styles */
.media-gallery-1 {
  @apply grid grid-cols-1 gap-6 my-8;
}

.media-gallery-2 {
  @apply grid grid-cols-1 md:grid-cols-2 gap-6 my-8;
}

.media-gallery-3 {
  @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 my-8;
}

.media-gallery-wide {
  @apply w-full my-12 -mx-4 md:-mx-8;
  max-width: calc(100vw - 2rem);
}

@media (min-width: 768px) {
  .media-gallery-wide {
    max-width: calc(100vw - 4rem);
  }
}

/* Modal overlay */
.modal-overlay {
  backdrop-filter: blur(8px);
  background-color: rgba(0, 0, 0, 0.9);
}

/* Image/video transitions */
.media-item {
  @apply transition-all duration-300 cursor-pointer;
}

.media-item:hover {
  @apply transform scale-105 shadow-2xl;
}

.title-bar-stripes {
  background-image: url("data:image/svg+xml,%3Csvg width='6' height='2' viewBox='0 0 6 2' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 1H6' stroke='currentColor' stroke-width='2'/%3E%3C/svg%3E");
}

/* Boot Screen Enhancements */
.boot-screen {
  background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 1) 100%);
  text-shadow: 0 0 10px currentColor;
}

.boot-screen::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(34, 197, 94, 0.02) 2px,
      rgba(34, 197, 94, 0.02) 4px
    );
  pointer-events: none;
  z-index: 1;
}

/* CRT Monitor Curvature Effect */
.boot-screen::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(ellipse at center, transparent 60%, rgba(0, 0, 0, 0.3) 100%);
  pointer-events: none;
  z-index: 2;
}

/* Glitch Animation */
@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

.glitch {
  animation: glitch 0.3s infinite;
}

/* Flickering Text Effect */
@keyframes flicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

.flicker {
  animation: flicker 0.15s infinite;
}

/* Enhanced Scanline Effect */
@keyframes scanline {
  0% { transform: translateY(-100vh); }
  100% { transform: translateY(100vh); }
}

.scanline {
  position: absolute;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(34, 197, 94, 0.6), transparent);
  animation: scanline 2s linear infinite;
  z-index: 3;
}

/* Boot text styling */
.boot-text {
  font-family: 'Courier New', monospace;
  line-height: 1.4;
  letter-spacing: 0.5px;
}

/* Status indicator pulse */
@keyframes status-pulse {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 1; }
}

.status-pulse {
  animation: status-pulse 1s ease-in-out infinite;
}


.pixel-corners,
.pixel-corners--wrapper {
  clip-path: polygon(0px calc(100% - 20px),
    4px calc(100% - 20px),
    4px calc(100% - 12px),
    8px calc(100% - 12px),
    8px calc(100% - 8px),
    12px calc(100% - 8px),
    12px calc(100% - 4px),
    20px calc(100% - 4px),
    20px 100%,
    calc(100% - 20px) 100%,
    calc(100% - 20px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 20px),
    100% calc(100% - 20px),
    100% 20px,
    calc(100% - 4px) 20px,
    calc(100% - 4px) 12px,
    calc(100% - 8px) 12px,
    calc(100% - 8px) 8px,
    calc(100% - 12px) 8px,
    calc(100% - 12px) 4px,
    calc(100% - 20px) 4px,
    calc(100% - 20px) 0px,
    20px 0px,
    20px 4px,
    12px 4px,
    12px 8px,
    8px 8px,
    8px 12px,
    4px 12px,
    4px 20px,
    0px 20px);
  position: relative;
}
.pixel-corners {
  border: 1px solid transparent;
}
.pixel-corners--wrapper {
  /* width: fit-content;
  height: fit-content; */
}
.pixel-corners--wrapper .pixel-corners {
  display: block;
  clip-path: polygon(4px 20px,
    8px 20px,
    8px 12px,
    12px 12px,
    12px 8px,
    20px 8px,
    20px 4px,
    calc(100% - 20px) 4px,
    calc(100% - 20px) 8px,
    calc(100% - 12px) 8px,
    calc(100% - 12px) 12px,
    calc(100% - 8px) 12px,
    calc(100% - 8px) 20px,
    calc(100% - 4px) 20px,
    calc(100% - 4px) calc(100% - 20px),
    calc(100% - 8px) calc(100% - 20px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 20px) calc(100% - 8px),
    calc(100% - 20px) calc(100% - 4px),
    20px calc(100% - 4px),
    20px calc(100% - 8px),
    12px calc(100% - 8px),
    12px calc(100% - 12px),
    8px calc(100% - 12px),
    8px calc(100% - 20px),
    4px calc(100% - 20px));
}
.pixel-corners::after,
.pixel-corners--wrapper::after {
  content: "";
  position: absolute;
  clip-path: polygon(0px calc(100% - 20px),
    4px calc(100% - 20px),
    4px calc(100% - 12px),
    8px calc(100% - 12px),
    8px calc(100% - 8px),
    12px calc(100% - 8px),
    12px calc(100% - 4px),
    20px calc(100% - 4px),
    20px 100%,
    calc(100% - 20px) 100%,
    calc(100% - 20px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 4px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 12px),
    calc(100% - 4px) calc(100% - 20px),
    100% calc(100% - 20px),
    100% 20px,
    calc(100% - 4px) 20px,
    calc(100% - 4px) 12px,
    calc(100% - 8px) 12px,
    calc(100% - 8px) 8px,
    calc(100% - 12px) 8px,
    calc(100% - 12px) 4px,
    calc(100% - 20px) 4px,
    calc(100% - 20px) 0px,
    20px 0px,
    20px 4px,
    12px 4px,
    12px 8px,
    8px 8px,
    8px 12px,
    4px 12px,
    4px 20px,
    0px 20px,
    0px 50%,
    4px 50%,
    4px 20px,
    8px 20px,
    8px 12px,
    12px 12px,
    12px 8px,
    20px 8px,
    20px 4px,
    calc(100% - 20px) 4px,
    calc(100% - 20px) 8px,
    calc(100% - 12px) 8px,
    calc(100% - 12px) 12px,
    calc(100% - 8px) 12px,
    calc(100% - 8px) 20px,
    calc(100% - 4px) 20px,
    calc(100% - 4px) calc(100% - 20px),
    calc(100% - 8px) calc(100% - 20px),
    calc(100% - 8px) calc(100% - 12px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 12px) calc(100% - 8px),
    calc(100% - 20px) calc(100% - 8px),
    calc(100% - 20px) calc(100% - 4px),
    20px calc(100% - 4px),
    20px calc(100% - 8px),
    12px calc(100% - 8px),
    12px calc(100% - 12px),
    8px calc(100% - 12px),
    8px calc(100% - 20px),
    4px calc(100% - 20px),
    4px 50%,
    0px 50%);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(211, 232, 255, 0.2);
  display: block;
  pointer-events: none;
}
.pixel-corners::after {
  margin: -1px;
}

.hljs {
  background: transparent !important;
}